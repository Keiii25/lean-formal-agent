import json
import requests


def main():
    base = "http://localhost:8000"
    # Fetch the relevant tool
    fundamental_tool = requests.get(
        base + "/tool_search?query=fundamental"
    ).json()[0]
    technical_tool = requests.get(
        base + "/tool_search?query=technical"
    ).json()[0]
    risk_assessment_tool = requests.get(
        base + "/tool_search?query=risk"
    ).json()[0]

    # Define the agent workflow
    agents_config = {
        "fundamental_agent": {
            "role": "Fundamental Stock Analyst",
            "goal": "Analyze a given stock ticker based on various metrics",
            "backstory": "A stock researcher experienced in analyzing information about stocks, their relevant peer companies, the industry, and their various fundamental ratios",
            "agent_tools": [fundamental_tool["id"]],
        },
        "technical_agent": {
            "role": "Technical Stock Analyst",
            "goal": "Analyze a given stock ticker based on in-depth technical analysis",
            "backstory": "A seasoned technical analyst with expertise in interpreting various technical indicators and trading stocks",
            "agent_tools": [technical_tool["id"], risk_assessment_tool["id"]],
        },
        "recommendation_agent": {
            "role": "Stock Recommendation Agent",
            "goal": "Suggest whether a stock should be bought/sold based on the signals generated by fundamental and technical analysis, explaining the rationale",
            "backstory": "Experienced stock analyst capable of analyzing fundamental and technical reports",
            "agent_tools": [],
        },
    }

    tasks_config = {
        "recommendation_task": {
            "description": "Recommend stocks based on the analysis",
            "expected_output": "Summary of the analysis of technical & fundamental agents, suggesting whether to buy or sell a stock",
            "context": ["fundamental_task", "technical_task"],
            "agent": "recommendation_agent",
        },
        "fundamental_task": {
            "description": "Conduct a thorough analysis of a stock using the provided tool. Analyse fundamentals based on the company, sector, peers, and financial ratios like PE ratio",
            "expected_output": "Summary of stock's key financial metrics, financials, and a bullish/bearish signal based on the information provided",
            "agent": "fundamental_agent",
        },
        "technical_task": {
            "description": "Conduct a thorough analysis of a stuck using the provided tool. Analyze various technical signals like MACD, RSI, etc.",
            "expected_output": "Summary of the stock's recent and projected future performance, and a bullish/bearish signal based on the technical analysis of various signals",
            "agent": "technical_agent",
        },
    }

    agent = requests.post(
        base + "/save_agent",
        json={
            "name": "Stock Recommendation Agent",
            "description": "Agent to recommend stocks",
            "arguments": ["query"],
            "agents": agents_config,
            "tasks": tasks_config,
        },
    ).json()

    print(agent)
    print("Saved agent with ID", agent["agent_id"])

    response = requests.get(
        base + "/agent_call?agent_id=" + agent["agent_id"],
        json={
            "query": "Analyze the AMZN ticker",
        },
    ).json()
    print(response)


main()
